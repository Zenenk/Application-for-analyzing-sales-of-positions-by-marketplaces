import React, { useEffect, useState } from "react";
import { getProducts, addProduct, deleteProduct, exportData } from "./api";
import ProductList from "./components/ProductList";
import ProductForm from "./components/ProductForm";
import "./App.css";

function App() {
  const [products, setProducts] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    async function fetchData() {
      try {
        const items = await getProducts();
        setProducts(items);
      } catch (err) {
        console.error("Failed to fetch products:", err);
        setError("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤");
      } finally {
        setLoading(false);
      }
    }
    fetchData();
  }, []);

  const handleAddProduct = async (url) => {
    setError("");
    try {
      const newProduct = await addProduct(url);
      setProducts([...products, newProduct]);
    } catch (err) {
      console.error("Add product failed:", err);
      setError("–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL.");
    }
  };

  const handleDeleteProduct = async (id) => {
    setError("");
    try {
      await deleteProduct(id);
      setProducts(products.filter(p => p.id !== id));
    } catch (err) {
      console.error("Delete failed:", err);
      setError("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä.");
    }
  };

  const handleExport = async (format) => {
    setError("");
    try {
      await exportData(format);
      // –í–æ–∑–º–æ–∂–Ω–æ, —Å–æ–æ–±—â–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –Ω–∞—á–∞–ª–æ—Å—å
    } catch (err) {
      console.error("Export failed:", err);
      setError("–≠–∫—Å–ø–æ—Ä—Ç –Ω–µ —É–¥–∞–ª—Å—è.");
    }
  };

  return (
    <div className="App">
      <h1>–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥–∞–∂ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö</h1>
      {error && <div className="error">{error}</div>}
      {/* –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ */}
      <ProductForm onAdd={handleAddProduct} />
      {/* –ö–Ω–æ–ø–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ */}
      <div className="export-buttons">
        <button onClick={() => handleExport("csv")}>üíæ –≠–∫—Å–ø–æ—Ä—Ç CSV</button>
        <button onClick={() => handleExport("pdf")}>üìÑ –≠–∫—Å–ø–æ—Ä—Ç PDF</button>
      </div>
      {/* –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ */}
      {loading ? (
        <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
      ) : (
        <ProductList products={products} onDelete={handleDeleteProduct} />
      )}
    </div>
  );
}

export default App;
