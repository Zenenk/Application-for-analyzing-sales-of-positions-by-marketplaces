# test_image_analysis.py

import os
import tempfile
import requests
from datetime import datetime

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î –∏ ORM
from database import init_db, add_product, get_products
# –î–∞—Ç—á–∏–∫ –ø—Ä–æ–º–æ-—Ç–µ–≥–æ–≤
from promo_detector import PromoDetector
# –≠–∫—Å–ø–æ—Ä—Ç–µ—Ä –≤ PDF/CSV
from exporter import export_to_pdf, export_to_csv

def main():
    # 1) –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î (—Å–æ–∑–¥–∞—Å—Ç —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
    init_db()

    # 2) –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä
    #    –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å URL –∏–ª–∏ –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
    image_url = (
        "https://sdmntprnorthcentralus.oaiusercontent.com/files/00000000-f310-622f-9498-b55533dfb99f/raw?se=2025-05-11T19%3A27%3A20Z&sp=r&sv=2024-08-04&sr=b&scid=00000000-0000-0000-0000-000000000000&skoid=1e6af1bf-6b08-4a04-8919-15773e7e7024&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2025-05-11T18%3A22%3A02Z&ske=2025-05-12T18%3A22%3A02Z&sks=b&skv=2024-08-04&sig=vTOOD6ZsQTVo%2BBfA4A/1uGG2VSHGZQ4kkhVq2Ow1llI%3D"
    )
    product = {
        "name":      "–•–ª–µ–±—Ü—ã –≥—Ä–µ—á–Ω–µ–≤—ã–µ HealthWealth",
        "article":   "123456789",
        "price":     635,
        "quantity":  42,
        "image_url": image_url
    }
    add_product(product)
    print("‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ë–î:", product)

    # 3) –°—á–∏—Ç—ã–≤–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –ë–î
    prods = get_products()
    print(f"üì¶ –í—Å–µ–≥–æ –≤ –ë–î —Ç–æ–≤–∞—Ä–æ–≤: {len(prods)}")

    # 4) –ü—Ä–æ–≥–æ–Ω—è–µ–º –ø—Ä–æ–º–æ-–¥–µ—Ç–µ–∫—Ç–æ—Ä –ø–æ –∫–∞–∂–¥–æ–º—É —Ç–æ–≤–∞—Ä—É
    detector = PromoDetector()
    results = []
    for p in prods:
        print(f"\n--- –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Ç–æ–≤–∞—Ä–∞ {p.article} ---")
        # –°–∫–∞—á–∏–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        resp = requests.get(p.image_url, timeout=10)
        tmp = tempfile.NamedTemporaryFile(suffix=".jpg", delete=False)
        tmp.write(resp.content)
        tmp.flush()
        tmp.close()

        # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ—Ç–µ–∫—Ç–æ—Ä –ø—Ä–æ–º–æ
        out = detector.predict_promotion(tmp.name)
        print("–†–µ–∑—É–ª—å—Ç–∞—Ç promo-–¥–µ—Ç–µ–∫—Ç–æ—Ä–∞:", out)

        # –°–æ–±–∏—Ä–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –¥–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–∞—Ä—Å–∏–Ω–≥–∞
        results.append({
            "name":         p.name,
            "article":      p.article,
            "price":        p.price,
            "quantity":     p.quantity,
            "image_url":    p.image_url,
            "promotion":    out,
            "parsed_at":    datetime.utcnow()
        })

        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        os.remove(tmp.name)

        # 5) –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ PDF
    pdf_path = "test_report.pdf"
    export_to_pdf(results, pdf_path)
    print(f"üìÑ PDF-–æ—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ {pdf_path}")

    # 6) –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ CSV
    csv_path = "test_report.csv"
    export_to_csv(results, csv_path)
    print(f"üìë CSV-–æ—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ {csv_path}")


if __name__ == "__main__":
    main()
